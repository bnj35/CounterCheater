generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email              String      @unique @db.VarChar(255)
  username           String      @unique @db.VarChar(100)
  steamProfileUrl    String?     @map("steam_profile_url") @db.VarChar(255)
  participationCount Int?        @default(0) @map("participation_count")
  role               String?     @default("user") @db.VarChar(50)
  complaints         Complaint[]

  @@index([email], map: "idx_users_email")
  @@index([username], map: "idx_users_username")
  @@map("users")
}

model Cheater {
  id              String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  steamProfileUrl String      @unique @map("steam_profile_url") @db.VarChar(255)
  complaintCount  Int?        @default(0) @map("complaint_count")
  status          String?     @default("pending") @db.VarChar(50)
  complaints      Complaint[]

  @@index([status], map: "idx_cheaters_status")
  @@index([steamProfileUrl], map: "idx_cheaters_steam_url")
  @@map("cheaters")
}

model Complaint {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId      String   @map("user_id") @db.Uuid
  cheaterId   String?  @map("cheater_id") @db.Uuid
  videoUrl    String   @map("video_url") @db.VarChar(255)
  description String   @db.Text
  status      String   @default("pending") @map("status") @db.VarChar(50)
  priority    String   @default("medium") @map("priority") @db.VarChar(50)
  createdAt   DateTime @default(now()) @map("created_at")
  
  user    User     @relation(fields: [userId], references: [id])
  cheater Cheater? @relation(fields: [cheaterId], references: [id])

    @@index([userId], map: "idx_complaints_user_id")
    @@index([cheaterId], map: "idx_complaints_cheater_id")
    @@index([status], map: "idx_complaints_status")
    @@index([priority], map: "idx_complaints_priority")
    @@map("complaints")
}